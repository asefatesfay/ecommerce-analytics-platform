services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - DATABASE_PATH=/app/data/ecommerce.db
    volumes:
      - ./data:/app/data
      - backend_logs:/app/logs
    networks:
      - ecommerce_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - ecommerce_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Backend (optional)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - ENV=development
      - DATABASE_PATH=/app/data/ecommerce.db
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - backend_dev_logs:/app/logs
    networks:
      - ecommerce_network
    profiles:
      - dev
    command: ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Development Frontend (optional)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend-dev:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - ecommerce_network
    profiles:
      - dev
    command: ["npm", "run", "dev"]

networks:
  ecommerce_network:
    driver: bridge

volumes:
  backend_logs:
  backend_dev_logs: